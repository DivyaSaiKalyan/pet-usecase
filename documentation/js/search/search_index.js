var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.437,1,1.646]],["body/controllers/AppController.html",[0,2.221,1,2.543,2,1.747,3,0.441,4,0.441,5,0.441,6,2.74,7,0.996,8,0.048,9,0.817,10,2.74,11,1.747,12,2.148,13,2.74,14,0.525,15,0.218,16,2.316,17,1.999,18,2.74,19,1.198,20,1.356,21,3.383,22,0.037,23,0.037]],["title/modules/AppModule.html",[24,1.646,25,1.646]],["body/modules/AppModule.html",[1,2.328,2,1.743,3,0.308,4,0.308,5,0.308,7,0.995,8,0.048,9,0.571,12,2.146,13,1.914,14,0.367,15,0.153,22,0.029,23,0.029,24,1.995,25,2.94,26,1.22,27,1.743,28,1.914,29,1.914,30,1.914,31,2.44,32,2.311,33,1.618,34,1.618,35,2.364,36,2.735,37,2.735,38,0.947,39,1.914,40,3.377,41,4.298,42,0.651,43,2.364,44,0.837,45,0.739,46,0.524,47,0.837,48,2.364,49,0.837,50,1.618,51,3.377,52,1.914,53,1.397,54,2.364,55,1.618,56,2.364,57,2.364,58,2.364,59,2.364,60,1.397,61,2.364,62,1.618,63,2.364,64,1.397,65,2.364,66,1.22,67,2.364,68,1.618,69,2.364,70,2.364,71,1.995,72,2.364,73,1.397,74,2.364]],["title/injectables/AppService.html",[12,1.264,75,0.673]],["body/injectables/AppService.html",[3,0.479,4,0.479,5,0.479,7,0.774,8,0.048,9,0.888,12,2.058,14,0.571,15,0.237,18,2.978,19,1.302,20,1.473,22,0.039,23,0.039,75,1.095,76,1.669,77,2.978,78,3.677,79,3.677]],["title/classes/HttpExceptionFilter.html",[15,0.18,80,1.906]],["body/classes/HttpExceptionFilter.html",[3,0.334,4,0.334,5,0.334,7,0.753,8,0.047,9,0.619,14,0.398,15,0.266,22,0.031,23,0.031,38,1.433,42,0.706,44,0.908,45,0.802,46,0.398,47,0.908,49,0.908,50,1.755,60,2.434,73,2.113,80,2.448,81,1.515,82,2.077,83,0.802,84,1.846,85,3.576,86,3.576,87,3.576,88,2.896,89,4.118,90,0.466,91,4.118,92,3.576,93,4.456,94,4.456,95,2.564,96,2.564,97,2.896,98,1.846,99,1.164,100,2.564,101,2.023,102,2.564,103,2.564,104,2.564,105,2.564,106,3.576,107,2.564,108,2.564,109,2.077,110,2.564,111,1.324,112,2.564,113,2.564,114,2.564,115,2.564,116,2.564]],["title/injectables/LoggerMiddleware.html",[75,0.673,117,1.906]],["body/injectables/LoggerMiddleware.html",[3,0.537,4,0.281,5,0.281,7,0.665,8,0.048,9,0.521,14,0.335,15,0.139,20,1.266,22,0.027,23,0.027,38,1.266,42,0.87,44,0.763,45,0.674,46,0.335,47,0.763,49,0.763,50,2.162,73,1.274,75,0.763,76,0.979,83,0.674,84,1.631,90,0.392,97,3.708,98,2.505,99,0.979,101,1.869,109,3.028,111,1.631,117,2.162,118,1.746,119,3.549,120,4.579,121,1.867,122,3.159,123,3.159,124,1.631,125,2.559,126,3.159,127,3.159,128,2.818,129,4.117,130,2.156,131,1.746,132,1.475,133,3.159,134,2.156,135,3.159,136,2.156,137,3.739,138,2.156,139,2.156,140,2.156,141,2.156,142,3.739,143,2.156,144,2.156,145,3.159,146,3.159]],["title/interfaces/SwaggerConfig.html",[147,1.646,148,1.646]],["body/interfaces/SwaggerConfig.html",[3,0.411,4,0.411,5,0.411,8,0.046,14,0.489,19,1.95,22,0.035,23,0.035,46,0.752,83,1.572,90,0.573,121,1.861,124,2.121,147,1.861,148,2.428,149,3.149,150,2.55,151,1.861,152,2.155,153,2.55,154,1.625,155,3.925,156,3.925,157,3.925]],["title/classes/TypeOrmInterface.html",[15,0.18,158,1.646]],["body/classes/TypeOrmInterface.html",[3,0.393,4,0.393,5,0.393,8,0.046,14,0.468,15,0.194,19,1.868,22,0.034,23,0.034,42,1.365,46,0.769,60,2.645,62,3.064,64,2.645,66,2.31,68,3.064,81,1.781,83,0.943,90,0.548,124,2.061,152,2.063,153,2.441,154,1.556,158,2.359,159,2.441,160,1.556,161,2.063,162,3.014,163,3.014,164,3.014,165,2.733,166,3.014,167,3.014]],["title/entities/User.html",[168,1.906,169,1.116]],["body/entities/User.html",[3,0.478,4,0.272,5,0.272,7,0.772,8,0.048,11,1.076,14,0.324,15,0.261,19,1.702,22,0.026,23,0.026,42,1.191,45,1.147,46,0.671,66,1.893,71,1.821,83,0.652,90,0.379,101,0.947,121,1.821,124,1.591,128,1.427,154,1.591,160,1.076,165,2.11,168,2.773,169,1.813,170,1.688,171,1.427,172,2.496,173,2.969,174,2.969,175,3.667,176,2.959,177,3.082,178,2.085,179,2.085,180,3.667,181,2.085,182,2.085,183,2.085,184,2.085,185,2.085,186,2.085,187,2.085,188,3.501,189,3.082,190,4.051,191,1.427,192,3.082,193,4.323,194,1.688,195,1.688,196,1.688,197,1.427,198,1.688,199,1.688,200,1.688,201,1.232,202,1.427,203,3.082,204,1.076,205,2.085,206,2.085,207,1.076,208,2.085,209,2.085]],["title/controllers/UserController.html",[0,1.437,210,1.646]],["body/controllers/UserController.html",[0,1.185,2,1.185,3,0.299,4,0.299,5,0.299,7,0.985,8,0.048,9,0.555,10,1.859,11,1.185,14,0.356,15,0.148,16,1.571,17,1.357,20,1.325,22,0.028,23,0.028,38,1.325,42,0.911,44,1.171,45,1.034,46,0.513,47,1.171,49,1.171,71,1.357,90,0.417,98,2.549,99,1.042,161,2.902,169,1.801,176,2.263,204,2.416,207,1.707,210,1.954,211,1.859,212,2.296,213,2.678,214,3.138,215,1.859,216,3.307,217,2.296,218,1.954,219,1.859,220,2.189,221,3.307,222,2.296,223,3.307,224,2.296,225,3.307,226,1.759,227,1.859,228,1.357,229,1.859,230,2.296,231,2.296,232,2.296,233,2.296,234,2.296,235,2.296]],["title/modules/UserModule.html",[24,1.646,31,1.437]],["body/modules/UserModule.html",[2,1.9,3,0.348,4,0.348,5,0.348,7,1.06,8,0.048,9,0.645,14,0.415,15,0.172,22,0.032,23,0.032,24,2.175,26,1.379,27,1.9,31,2.649,32,2.519,33,1.829,34,1.829,36,2.98,37,2.164,52,2.164,53,1.579,169,1.071,210,2.487,226,2.232,227,2.164,228,1.579,236,2.164,237,2.164,238,2.232,239,2.672,240,2.672,241,2.164,242,2.672,243,1.829,244,2.672,245,2.672,246,3.68,247,2.672,248,2.672,249,2.672]],["title/injectables/UserService.html",[75,0.673,226,1.264]],["body/injectables/UserService.html",[3,0.245,4,0.245,5,0.245,7,0.951,8,0.048,9,0.453,14,0.291,15,0.121,17,1.683,20,1.141,22,0.024,23,0.024,38,1.141,42,0.948,44,1.219,45,1.076,46,0.534,47,1.219,49,1.008,53,1.108,71,1.108,75,0.688,76,0.852,90,0.341,98,2.333,99,0.852,101,1.975,111,1.47,125,1.949,128,1.284,160,0.968,161,2.356,169,1.743,173,1.519,194,1.519,195,1.519,196,1.519,197,1.284,198,1.519,199,1.519,200,1.519,201,1.108,202,1.284,204,2.245,207,1.984,213,2.306,214,2.306,215,2.306,218,1.683,219,2.306,220,1.984,226,1.293,228,1.108,229,1.519,238,2.052,241,1.519,250,1.284,251,2.306,252,1.876,253,3.112,254,1.876,255,2.847,256,1.876,257,1.876,258,1.876,259,1.876,260,1.876,261,1.876,262,1.876,263,1.876,264,2.847,265,1.876,266,1.876,267,2.847,268,1.876,269,1.876,270,1.519,271,1.876,272,1.876,273,2.356,274,1.876,275,1.876,276,1.876]],["title/injectables/ValidationPipe.html",[75,0.673,277,1.906]],["body/injectables/ValidationPipe.html",[3,0.295,4,0.295,5,0.295,7,0.809,8,0.048,9,0.547,14,0.351,15,0.248,19,0.801,20,1.54,22,0.028,23,0.028,38,1.311,42,0.901,44,1.159,45,1.023,46,0.508,47,1.159,49,1.159,73,1.337,75,0.79,76,1.027,83,0.708,84,1.689,90,0.412,101,1.745,111,1.168,119,2.65,125,2.631,132,2.883,152,1.549,165,1.549,191,1.549,204,1.984,207,1.168,218,1.337,270,1.833,277,2.24,278,1.833,279,3.844,280,3.273,281,3.273,282,3.273,283,3.273,284,2.263,285,3.844,286,3.844,287,3.273,288,2.263,289,4.212,290,2.263,291,3.273,292,2.263,293,2.263,294,1.833,295,2.263,296,3.273,297,2.263,298,2.263,299,2.263,300,2.263,301,1.833,302,2.263,303,2.263,304,2.263,305,2.263]],["title/coverage.html",[306,2.591]],["body/coverage.html",[0,1.771,1,1.429,5,0.315,6,1.958,8,0.047,12,1.098,15,0.257,22,0.029,23,0.029,46,0.375,55,1.655,75,1.107,77,1.958,80,1.655,82,1.958,111,1.248,117,1.655,118,1.958,147,1.429,148,1.429,150,1.958,158,1.429,159,1.958,168,1.655,169,0.969,171,2.349,201,2.028,210,1.429,211,1.958,220,1.248,226,1.098,238,1.098,250,2.349,277,1.655,278,1.958,301,4.123,306,1.655,307,2.418,308,2.418,309,2.418,310,2.418,311,2.418,312,3.432,313,3.432,314,1.958,315,2.418,316,1.958,317,3.516,318,1.958,319,4.342,320,4.342,321,2.418,322,2.418,323,1.958,324,2.779,325,1.958,326,1.958,327,2.418,328,2.418,329,4.585,330,1.958,331,3.432,332,2.418,333,1.958,334,1.958,335,2.418,336,2.418]],["title/dependencies.html",[27,1.727,337,2.333]],["body/dependencies.html",[8,0.048,9,0.732,11,1.563,15,0.258,22,0.034,23,0.034,27,1.563,53,1.79,99,1.818,151,1.79,160,1.563,191,2.073,243,2.073,273,2.073,294,2.453,338,4.774,339,3.029,340,3.029,341,3.029,342,3.029,343,3.029,344,3.029,345,3.029,346,3.029,347,3.029,348,3.029,349,3.029,350,3.029,351,3.029,352,3.029,353,3.029,354,3.029,355,3.029,356,3.029,357,3.029,358,3.029,359,3.029,360,3.029,361,3.029,362,3.029,363,3.029,364,3.029,365,3.029,366,3.029]],["title/miscellaneous/functions.html",[367,1.379,368,2.709]],["body/miscellaneous/functions.html",[8,0.043,22,0.038,23,0.038,44,1.238,45,1.093,46,0.543,47,1.238,49,1.238,83,1.093,84,1.804,90,0.636,151,2.595,323,2.83,324,2.83,325,3.557,333,2.83,334,3.889,367,2.065,368,2.83,369,3.495,370,3.495,371,3.495,372,4.392,373,4.392,374,2.392,375,3.495,376,3.495,377,3.495,378,3.495,379,3.495,380,3.495]],["title/index.html",[90,0.424,381,2.333,382,2.333]],["body/index.html",[4,0.348,8,0.047,22,0.032,23,0.032,83,0.836,88,2.164,154,1.379,197,1.829,253,2.164,306,1.829,374,1.829,383,2.672,384,2.672,385,3.68,386,2.672,387,2.672,388,2.672,389,2.672,390,2.672,391,2.672,392,4.209,393,2.672,394,2.672,395,5.037,396,2.672,397,2.672,398,4.916,399,2.672,400,2.672,401,3.68,402,2.672,403,2.672,404,2.672,405,2.672,406,3.68,407,3.68,408,2.672,409,2.672,410,2.672,411,3.68,412,3.68,413,2.672,414,2.672,415,2.672,416,2.672,417,2.164,418,2.672,419,2.672,420,2.672,421,2.672,422,2.672,423,2.672,424,2.672,425,2.672,426,2.672,427,2.672,428,2.672,429,2.672,430,2.672,431,2.672,432,2.672,433,2.672,434,2.672]],["title/injectables/jwtServiceClass.html",[75,0.673,238,1.264]],["body/injectables/jwtServiceClass.html",[3,0.287,4,0.287,5,0.287,7,0.875,8,0.048,9,0.531,14,0.342,15,0.142,16,1.506,17,1.3,19,1.34,20,1.516,22,0.027,23,0.027,38,1.285,42,1.145,44,1.472,45,1.3,46,0.645,47,1.472,49,1.34,75,0.775,76,0.999,90,0.4,98,2.281,99,0.999,101,1.456,169,1.771,174,1.782,204,2.569,207,1.655,218,1.895,228,1.3,238,1.456,243,1.506,251,1.782,273,2.195,314,1.782,435,3.206,436,3.206,437,3.206,438,2.2,439,4.613,440,2.2,441,3.206,442,2.2,443,3.206,444,2.2,445,3.206,446,3.206,447,2.2,448,2.2,449,2.2,450,2.2,451,3.206,452,2.2,453,2.2,454,2.2,455,2.2]],["title/classes/loginDto.html",[15,0.18,220,1.437]],["body/classes/loginDto.html",[3,0.434,4,0.434,5,0.434,7,0.701,8,0.047,11,1.719,14,0.517,15,0.215,19,1.753,22,0.036,23,0.036,42,1.173,46,0.661,64,2.775,66,2.424,81,1.968,90,0.606,124,2.199,176,2.916,188,4.143,220,2.199,330,2.697,456,3.33,457,3.33]],["title/modules.html",[26,1.954]],["body/modules.html",[8,0.041,22,0.041,23,0.041,25,2.395,26,2.092,31,2.092,417,3.893,458,4.807,459,4.807,460,4.807]],["title/overview.html",[461,3.065]],["body/overview.html",[2,1.675,8,0.044,12,2.106,22,0.036,23,0.036,25,3.071,26,1.675,27,2.163,28,2.628,29,2.628,30,2.628,31,2.73,32,2.868,33,2.221,34,2.221,76,1.473,81,1.918,147,1.918,170,2.628,226,2.106,236,2.628,237,2.628,238,2.106,461,2.628,462,4.189,463,4.189,464,3.245,465,3.245]],["title/miscellaneous/variables.html",[367,1.379,466,2.709]],["body/miscellaneous/variables.html",[3,0.375,8,0.046,22,0.033,23,0.033,39,2.33,46,0.601,55,2.649,60,1.701,62,1.97,64,1.701,66,1.486,68,1.97,83,0.9,84,1.486,90,0.523,121,1.701,131,3.787,132,3.201,148,1.701,151,1.701,154,1.998,155,2.33,156,2.33,157,2.33,158,1.701,160,1.486,171,1.97,172,2.33,201,2.764,202,2.649,250,1.97,316,2.33,317,2.33,318,3.134,326,2.33,367,1.701,374,1.97,466,2.33,467,2.878,468,2.878,469,2.878,470,2.878,471,3.87,472,2.878,473,2.878,474,2.878,475,2.878,476,2.878,477,2.878,478,3.87,479,2.878,480,2.878]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":301,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":463,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.4.6",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":209,"title":{},"body":{"entities/User.html":{}}}],["100",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":462,"title":{},"body":{"overview.html":{}}}],["2.3.3",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":465,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":249,"title":{},"body":{"modules/UserModule.html":{}}}],["4.0.0",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":464,"title":{},"body":{"overview.html":{}}}],["5.2.0",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["agent",{"_index":140,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["amazing",{"_index":418,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":188,"title":{},"body":{"entities/User.html":{},"classes/loginDto.html":{}}}],["apitags",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["apitags('user",{"_index":230,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":391,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":25,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":12,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":289,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":94,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":304,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":204,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}}}],["author",{"_index":427,"title":{},"body":{"index.html":{}}}],["autoloadentities",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["avaliabale",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avaliable",{"_index":172,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":207,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}}}],["backers",{"_index":419,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":292,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":302,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["based",{"_index":122,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["bcrypt",{"_index":201,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":268,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(this.password",{"_index":208,"title":{},"body":{"entities/User.html":{}}}],["bcryptjs",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["beforeinsert",{"_index":192,"title":{},"body":{"entities/User.html":{}}}],["body",{"_index":223,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":286,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":334,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":460,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":458,"title":{},"body":{"modules.html":{}}}],["building",{"_index":386,"title":{},"body":{"index.html":{}}}],["cache",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["catch",{"_index":91,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":92,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":100,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["class",{"_index":15,"title":{"classes/HttpExceptionFilter.html":{},"classes/TypeOrmInterface.html":{},"classes/loginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["classes",{"_index":81,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeOrmInterface.html":{},"classes/loginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":236,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":237,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":193,"title":{},"body":{"entities/User.html":{}}}],["column()@apiproperty()@isstring",{"_index":184,"title":{},"body":{"entities/User.html":{}}}],["column()@isstring()@apiproperty",{"_index":182,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":177,"title":{},"body":{"entities/User.html":{}}}],["commom",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common/providers/jwt.service",{"_index":241,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["config/typeorm/typeorm.config",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configurations",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configure(consumer",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":101,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}}}],["constructor",{"_index":251,"title":{},"body":{"injectables/UserService.html":{},"injectables/jwtServiceClass.html":{}}}],["constructor(jwtservice",{"_index":438,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["constructor(private",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/jwtServiceClass.html":{}}}],["constructor(userrepository",{"_index":252,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply().forroutes",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["contentlength",{"_index":142,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('user",{"_index":231,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":306,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdocument",{"_index":325,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createjwttoken",{"_index":435,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["createjwttoken(user",{"_index":441,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["createuser",{"_index":213,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":232,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(data",{"_index":215,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credentials",{"_index":272,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":102,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":105,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":104,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":161,"title":{},"body":{"classes/TypeOrmInterface.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["data.username",{"_index":266,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":112,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["declared",{"_index":153,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{}}}],["decorators",{"_index":176,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"classes/loginDto.html":{}}}],["default",{"_index":131,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["deletetoken",{"_index":436,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["deletetoken(response",{"_index":443,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["dependencies",{"_index":27,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":83,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":397,"title":{},"body":{"index.html":{}}}],["disable",{"_index":195,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["document",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["dto/login.dto",{"_index":229,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":408,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":387,"title":{},"body":{"index.html":{}}}],["email",{"_index":173,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["entire",{"_index":87,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["entities",{"_index":170,"title":{},"body":{"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":228,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/jwtServiceClass.html":{}}}],["entity",{"_index":168,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["errors",{"_index":298,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":300,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eslint",{"_index":194,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["eslint/no",{"_index":198,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["exception",{"_index":96,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":107,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":116,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":89,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptions",{"_index":86,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["expiresin",{"_index":248,"title":{},"body":{"modules/UserModule.html":{}}}],["export",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["express",{"_index":99,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{},"injectables/jwtServiceClass.html":{}}}],["failed",{"_index":303,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["find",{"_index":85,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["framework",{"_index":385,"title":{},"body":{"index.html":{}}}],["function",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":368,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":381,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":264,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser.password",{"_index":269,"title":{},"body":{"injectables/UserService.html":{}}}],["grow",{"_index":414,"title":{},"body":{"index.html":{}}}],["hello",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":154,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/TypeOrmInterface.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":103,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":93,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":80,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":276,"title":{},"body":{"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":431,"title":{},"body":{"index.html":{}}}],["id",{"_index":174,"title":{},"body":{"entities/User.html":{},"injectables/jwtServiceClass.html":{}}}],["identifier",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["imported",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":90,"title":{"index.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":75,"title":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"injectables/jwtServiceClass.html":{}}}],["injectables",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{},"overview.html":{}}}],["injectrepository",{"_index":259,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":260,"title":{},"body":{"injectables/UserService.html":{}}}],["inputs",{"_index":280,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["installation",{"_index":394,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":396,"title":{},"body":{"index.html":{}}}],["interface",{"_index":147,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":149,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["ip",{"_index":136,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["isemail",{"_index":189,"title":{},"body":{"entities/User.html":{}}}],["isstring",{"_index":190,"title":{},"body":{"entities/User.html":{}}}],["join",{"_index":421,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":273,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{},"injectables/jwtServiceClass.html":{}}}],["jwtmodule",{"_index":242,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":245,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":439,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["jwtserviceclass",{"_index":238,"title":{"injectables/jwtServiceClass.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtServiceClass.html":{},"overview.html":{}}}],["kamil",{"_index":428,"title":{},"body":{"index.html":{}}}],["length",{"_index":144,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["library",{"_index":378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":434,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":412,"title":{},"body":{"index.html":{}}}],["line",{"_index":196,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["localhost",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":120,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(loggermiddleware.name",{"_index":133,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["loggermiddleware",{"_index":117,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logindto",{"_index":220,"title":{"classes/loginDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/loginDto.html":{}}}],["loginuser",{"_index":214,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["loginuser(data",{"_index":219,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logout",{"_index":454,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["manager",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":267,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":115,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":285,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":119,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ValidationPipe.html":{}}}],["methods",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}}}],["middleware",{"_index":123,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["middlewareconsumer",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":367,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":411,"title":{},"body":{"index.html":{}}}],["mode",{"_index":401,"title":{},"body":{"index.html":{}}}],["module",{"_index":24,"title":{"modules/AppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":26,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/user/user.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":424,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":429,"title":{},"body":{"index.html":{}}}],["name",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"injectables/jwtServiceClass.html":{}}}],["nest",{"_index":392,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":433,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{},"injectables/jwtServiceClass.html":{}}}],["nestjs/core",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":243,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{},"injectables/jwtServiceClass.html":{}}}],["nestjs/platform",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"dependencies.html":{},"classes/loginDto.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":135,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":111,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["newdata",{"_index":261,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":128,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["nextfunction",{"_index":129,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":384,"title":{},"body":{"index.html":{}}}],["npm",{"_index":395,"title":{},"body":{"index.html":{}}}],["number",{"_index":165,"title":{},"body":{"classes/TypeOrmInterface.html":{},"entities/User.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":296,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.assign(user",{"_index":262,"title":{},"body":{"injectables/UserService.html":{}}}],["open",{"_index":413,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"injectables/jwtServiceClass.html":{}}}],["originalurl",{"_index":137,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["out",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":461,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":337,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"injectables/jwtServiceClass.html":{}}}],["parser",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":234,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"classes/loginDto.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":113,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["pets",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petsapp",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber",{"_index":175,"title":{},"body":{"entities/User.html":{}}}],["pipetransform",{"_index":291,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":293,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":297,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":422,"title":{},"body":{"index.html":{}}}],["port",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":224,"title":{},"body":{"controllers/UserController.html":{}}}],["post('adduser",{"_index":216,"title":{},"body":{"controllers/UserController.html":{}}}],["post('loginuser",{"_index":221,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":212,"title":{},"body":{"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":180,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":125,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":403,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":383,"title":{},"body":{"index.html":{}}}],["project",{"_index":88,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"index.html":{}}}],["promise",{"_index":445,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["properties",{"_index":124,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"classes/loginDto.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["read",{"_index":423,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtServiceClass.html":{}}}],["reflect",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":121,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":253,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["request",{"_index":97,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["request.get('user",{"_index":139,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.url",{"_index":114,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["require('bcryptjs",{"_index":202,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":200,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["res",{"_index":225,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":98,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtServiceClass.html":{}}}],["response.clearcookie('jwt",{"_index":453,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["response.cookie('jwt",{"_index":275,"title":{},"body":{"injectables/UserService.html":{}}}],["response.get('content",{"_index":143,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('finish",{"_index":141,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.status(status).json",{"_index":108,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["results",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}}}],["returns",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"injectables/jwtServiceClass.html":{}}}],["rimraf",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":398,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":388,"title":{},"body":{"index.html":{}}}],["secret",{"_index":246,"title":{},"body":{"modules/UserModule.html":{}}}],["selling",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":389,"title":{},"body":{"index.html":{}}}],["side",{"_index":390,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":247,"title":{},"body":{"modules/UserModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"index.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["sponsors",{"_index":416,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:27",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":82,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:13",{"_index":95,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":118,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/middleware/logger.middleware.ts:10",{"_index":130,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/middleware/logger.middleware.ts:8",{"_index":134,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/pipes/validation.pipes.ts",{"_index":278,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validation.pipes.ts:14",{"_index":290,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validation.pipes.ts:26",{"_index":284,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/providers/jwt.service.ts",{"_index":314,"title":{},"body":{"coverage.html":{},"injectables/jwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:10",{"_index":442,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:15",{"_index":447,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:20",{"_index":444,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["src/common/providers/jwt.service.ts:7",{"_index":440,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["src/config/swagger/swagger.config.ts",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger/swagger.interface.ts",{"_index":150,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/config/swagger/swagger.ts",{"_index":323,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/config/typeorm/typeorm.config.ts",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm/typeorm.interface.ts",{"_index":159,"title":{},"body":{"classes/TypeOrmInterface.html":{},"coverage.html":{}}}],["src/config/typeorm/typeorm.interface.ts:5",{"_index":163,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/config/typeorm/typeorm.interface.ts:6",{"_index":166,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/config/typeorm/typeorm.interface.ts:7",{"_index":167,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/config/typeorm/typeorm.interface.ts:8",{"_index":164,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/config/typeorm/typeorm.interface.ts:9",{"_index":162,"title":{},"body":{"classes/TypeOrmInterface.html":{}}}],["src/entities/user.entity.ts",{"_index":171,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/user.entity.ts:13",{"_index":181,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:18",{"_index":183,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:23",{"_index":179,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:28",{"_index":187,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:33",{"_index":185,"title":{},"body":{"entities/User.html":{}}}],["src/main.ts",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/user/dto/login.dto.ts",{"_index":330,"title":{},"body":{"coverage.html":{},"classes/loginDto.html":{}}}],["src/modules/user/dto/login.dto.ts:5",{"_index":457,"title":{},"body":{"classes/loginDto.html":{}}}],["src/modules/user/dto/login.dto.ts:8",{"_index":456,"title":{},"body":{"classes/loginDto.html":{}}}],["src/modules/user/user.controller.ts",{"_index":211,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:14",{"_index":217,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:19",{"_index":222,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":239,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":250,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/user.service.ts:12",{"_index":254,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:18",{"_index":256,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:24",{"_index":257,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":399,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":402,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":404,"title":{},"body":{"index.html":{}}}],["started",{"_index":382,"title":{"index.html":{}},"body":{}}],["starter",{"_index":393,"title":{},"body":{"index.html":{}}}],["statements",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":106,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":109,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":425,"title":{},"body":{"index.html":{}}}],["string",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{}}}],["strongpassword",{"_index":205,"title":{},"body":{"entities/User.html":{}}}],["success",{"_index":455,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["support",{"_index":417,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":459,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":151,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["swagger_config",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":148,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":155,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":407,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":410,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":409,"title":{},"body":{"index.html":{}}}],["tests",{"_index":406,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":415,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["this.jwtservice.signasync",{"_index":449,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":452,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["this.jwtserviceclass.createjwttoken(getuser",{"_index":274,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.log",{"_index":145,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.password",{"_index":206,"title":{},"body":{"entities/User.html":{}}}],["this.tovalidate(metatype",{"_index":295,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.findone",{"_index":265,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newdata",{"_index":263,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(data",{"_index":233,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.loginuser(data",{"_index":235,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":270,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":110,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":156,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":448,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["touch",{"_index":426,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":281,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":283,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":282,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":287,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":294,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["true})@isemail()@apiproperty",{"_index":178,"title":{},"body":{"entities/User.html":{}}}],["true})@isstring()@apiproperty",{"_index":186,"title":{},"body":{"entities/User.html":{}}}],["twitter",{"_index":432,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"injectables/jwtServiceClass.html":{},"classes/loginDto.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":160,"title":{},"body":{"classes/TypeOrmInterface.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["typeormconfig",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormconfig.database",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.host",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.password",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.port",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormconfig.username",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["typeorminterface",{"_index":158,"title":{"classes/TypeOrmInterface.html":{}},"body":{"classes/TypeOrmInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":244,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":152,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/TypeOrmInterface.html":{},"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":305,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":197,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["ui",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":258,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception('incorrect",{"_index":271,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":288,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unique",{"_index":203,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":405,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":218,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/jwtServiceClass.html":{}}}],["use",{"_index":126,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(request",{"_index":127,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["used",{"_index":84,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":169,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtServiceClass.html":{}}}],["user.controller",{"_index":240,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":450,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["user.service",{"_index":227,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["useragent",{"_index":138,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useragent}${ip",{"_index":146,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usercontroller",{"_index":210,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":31,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/TypeOrmInterface.html":{},"classes/loginDto.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":255,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":226,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":279,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":299,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":277,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":191,"title":{},"body":{"entities/User.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":132,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":199,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{}}}],["variable",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":466,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyjwttoken",{"_index":437,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["verifyjwttoken(token",{"_index":446,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["verifytoken",{"_index":451,"title":{},"body":{"injectables/jwtServiceClass.html":{}}}],["version",{"_index":157,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":400,"title":{},"body":{"index.html":{}}}],["website",{"_index":430,"title":{},"body":{"index.html":{}}}],["world",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":420,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmConfig } from './Config/TypeOrm/typeorm.config';\nimport { UserModule } from './Modules/user/user.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: TypeOrmConfig.host,\n      port: TypeOrmConfig.port,\n      username: TypeOrmConfig.username,\n      password: TypeOrmConfig.password,\n      database: TypeOrmConfig.database,\n      autoLoadEntities: true,\n      synchronize: true\n    }),\n    UserModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply().forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  // getHello(): string {\n  //   return 'Hello World!';\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Filters/exception.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is used to find the exceptions for entire project\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Filters/exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n/**\n * This class is used to find the exceptions for entire project\n */\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: exception.message\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/MiddleWare/logger.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                This method is used to return the logger related info based on middleware\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/MiddleWare/logger.middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggerMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/Common/MiddleWare/logger.middleware.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n/**\n * This method is used to return the logger related info based on middleware\n */\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private logger = new Logger(LoggerMiddleware.name);\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const { ip, method, originalUrl } = request;\n\n    const userAgent = request.get('user-agent') || '';\n    response.on('finish', () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n      this.logger.log(\n        `${method} ${originalUrl} ${statusCode} ${contentLength}-${userAgent}${ip}`\n      );\n      this.logger.log(\n        'info',\n        `${method} ${originalUrl} ${statusCode} ${contentLength}-${userAgent}${ip}`\n      );\n    });\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Config/Swagger/swagger.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                swagger related types is declared here\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Description\n                                        \n                                \n                                \n                                        \n                                            Tags\n                                        \n                                \n                                \n                                        \n                                            Title\n                                        \n                                \n                                \n                                        \n                                            Version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  Title: string;\n  Description: string;\n  Version: string;\n  Tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOrmInterface.html":{"url":"classes/TypeOrmInterface.html","title":"class - TypeOrmInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOrmInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Config/TypeOrm/typeorm.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                TypeOrm data types Declared here\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                database\n                            \n                            \n                                host\n                            \n                            \n                                password\n                            \n                            \n                                port\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Config/TypeOrm/typeorm.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Config/TypeOrm/typeorm.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Config/TypeOrm/typeorm.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Config/TypeOrm/typeorm.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Config/TypeOrm/typeorm.interface.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TypeOrmInterface {\n  host: string;\n  port: number;\n  username: string;\n  password: string;\n  database: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a user entity class all user related info is avaliable here\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString } from 'class-validator';\nimport { BeforeInsert, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs');\n\n/**\n * This is a user entity class all user related info is avaliable here\n */\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  @IsString()\n  @ApiProperty()\n  name: string;\n\n  @Column({ unique: true })\n  @IsEmail()\n  @ApiProperty()\n  email: string;\n\n  @Column({ unique: true })\n  @IsString()\n  @ApiProperty()\n  phoneNumber: string;\n\n  @Column()\n  @ApiProperty()\n  @IsString()\n  password: string;\n\n  @BeforeInsert()\n  async strongPassword() {\n    this.password = await bcrypt.hash(this.password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateUser\n                            \n                            \n                                    Async\n                                LoginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUser(data: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addUser')\n                \n            \n\n            \n                \n                    Defined in src/Modules/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        LoginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    LoginUser(data: loginDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('LoginUser')\n                \n            \n\n            \n                \n                    Defined in src/Modules/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                loginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Res } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { User } from './../../Entities/user.entity';\nimport { ApiTags } from '@nestjs/swagger';\nimport { loginDto } from './dto/login.dto';\nimport { Response } from 'express';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('addUser')\n  async CreateUser(@Body() data: User) {\n    return await this.userService.CreateUser(data);\n  }\n\n  @Post('LoginUser')\n  async LoginUser(\n    @Body() data: loginDto,\n    @Res({ passthrough: true }) response: Response\n  ) {\n    return await this.userService.loginUser(data, response);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\njwtServiceClass\n\njwtServiceClass\n\nUserModule -->\n\njwtServiceClass->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                        \n                            jwtServiceClass\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './../../Entities/user.entity';\nimport { jwtServiceClass } from './../../Common/Providers/jwt.service';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    JwtModule.register({\n      secret: 'secret',\n      signOptions: { expiresIn: '3h' }\n    })\n  ],\n\n  controllers: [UserController],\n  providers: [UserService, jwtServiceClass]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateUser\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtserviceClass: jwtServiceClass)\n                    \n                \n                        \n                            \n                                Defined in src/Modules/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtserviceClass\n                                                  \n                                                        \n                                                                        jwtServiceClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUser(data: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(data: loginDto, response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                loginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './../../Entities/user.entity';\nimport { loginDto } from './dto/login.dto';\nimport { jwtServiceClass } from './../../Common/Providers/jwt.service';\nimport { Response } from 'express';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs');\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository,\n    private readonly jwtserviceClass: jwtServiceClass\n  ) {}\n\n  async CreateUser(data: User) {\n    const user = new User();\n    const newData = Object.assign(user, data);\n    return await this.userRepository.save(newData);\n  }\n\n  async loginUser(data: loginDto, response: Response) {\n    const getUser = await this.userRepository.findOne({ email: data.username });\n    const match = await bcrypt.compare(data.password, getUser.password);\n    if (!getUser || !match) {\n      throw new UnauthorizedException('incorrect credentials');\n    }\n    const jwt = await this.jwtserviceClass.CreateJwtToken(getUser);\n    response.cookie('jwt', jwt, { httpOnly: true });\n    return jwt;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Pipes/validation.pipes.ts\n        \n\n\n            \n                Description\n            \n            \n                This method is used to validate inputs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Pipes/validation.pipes.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Pipes/validation.pipes.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  ArgumentMetadata,\n  BadRequestException\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n/**\n * This method is used to validate inputs\n */\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: any): boolean {\n    const types: any[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Common/Filters/exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/Common/MiddleWare/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/Pipes/validation.pipes.ts\n            \n            injectable\n            ValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Common/Providers/jwt.service.ts\n            \n            injectable\n            jwtServiceClass\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Config/Swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Config/Swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/Config/Swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Config/TypeOrm/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Config/TypeOrm/typeorm.interface.ts\n            \n            class\n            TypeOrmInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/Entities/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Entities/user.entity.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Modules/user/dto/login.dto.ts\n            \n            class\n            loginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Modules/user/user.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^3.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            mysql2 : ^2.3.3\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/Config/Swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    This function is used to create a swagger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is imported from the nestjs commom library\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        create swagger document\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/jwtServiceClass.html":{"url":"injectables/jwtServiceClass.html","title":"injectable - jwtServiceClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  jwtServiceClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Common/Providers/jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateJwtToken\n                            \n                            \n                                    Async\n                                deleteToken\n                            \n                            \n                                    Async\n                                verifyJwtToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtservice: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/Common/Providers/jwt.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtservice\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateJwtToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/jwt.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteToken(response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/jwt.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyJwtToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Common/Providers/jwt.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { User } from './../../Entities/user.entity';\n\n@Injectable()\nexport class jwtServiceClass {\n  constructor(private readonly jwtservice: JwtService) {}\n\n  async CreateJwtToken(user: User) {\n    const jwt = await this.jwtservice.signAsync({ id: user.id });\n    return jwt;\n  }\n\n  async verifyJwtToken(token: string) {\n    const verifyToken = await this.jwtservice.verifyAsync(token);\n    return verifyToken;\n  }\n\n  async deleteToken(response: Response): Promise {\n    response.clearCookie('jwt');\n    return 'logout success';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/loginDto.html":{"url":"classes/loginDto.html","title":"class - loginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  loginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/user/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/user/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/user/dto/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class loginDto {\n  @ApiProperty()\n  username: string;\n\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\njwtServiceClass\n\njwtServiceClass\n\nUserModule -->\n\njwtServiceClass->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../user.entity.ts)\n                        \n                        \n                            bcrypt   (src/.../user.service.ts)\n                        \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/Entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    src/Modules/user/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    src/Config/Swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  Title: 'Pets Selling App',\n  Description: 'All pets are avaliabale here',\n  Version: '1.0',\n  Tags: ['Template']\n}\n                    \n                \n\n            \n                \n                    This variable is used to configure the swagger related info\n\n                \n            \n\n        \n    \n\n    src/Config/TypeOrm/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeOrmConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOrmInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  host: 'localhost',\n  port: 3306,\n  username: 'root',\n  password: 'root',\n  database: 'petsapp'\n}\n                    \n                \n\n            \n                \n                    all typeOrm configurations are avaliable here\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
